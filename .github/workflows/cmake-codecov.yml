name: CMake Codecov

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Before Install
      run: |
        sudo apt-get install g++-10 librange-v3-dev libfftw3-dev lcov
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 90
        # conda update -q conda
        conda env update --file environment-dev.yml --name base
        git submodule update --init 

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_COVERAGE=1 -DCMAKE_SYSTEM_IGNORE_PATH=/usr/lib

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure
        lcov --directory . --capture --output-file coverage.info # capture coverage info
        lcov --remove coverage.info '*/external/*' '/usr/*' --output-file coverage.info # filter out system
        lcov --list coverage.info #debug info

    - name: Codecov
      # You may pin to the exact commit or the version.
      # uses: codecov/codecov-action@29386c70ef20e286228c72b668a06fd0e8399192
      uses: codecov/codecov-action@v1.5.2
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        token: # optional
        # Comma-separated list of files to upload
        fail_ci_if_error: true
